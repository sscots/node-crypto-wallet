swagger: "2.0"
info:
  version: "0.0.1"
  title: Monero Wallet
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    in: header
    name: Authorization
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /auth:
    # binds a127 app logic to a route
    x-swagger-router-controller: user
    post:
      description: Authenticate a User
      # used as the method name of the controller
      operationId: user_authenticate
      parameters:
        - name: auth
          in: body
          description: The email and password to authenticate with
          schema:
            $ref: "#/definitions/Auth"
      responses:
        "200":
          description: Success. Includes authentication token.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UserAuth"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user:
    # binds a127 app logic to a route
    x-swagger-router-controller: user
    post:
      description: Create a User
      # used as the method name of the controller
      operationId: user_add
      parameters:
        - name: user
          in: body
          description: The email and password to create a user with
          schema:
            $ref: "#/definitions/Auth"
      responses:
        "200":
          description: Success. Includes authentication token.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UserAuth"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Get Authenticated User
      # used as the method name of the controller
      operationId: user_get
      security:
        - Bearer: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Update Authenticated User
      # used as the method name of the controller
      operationId: user_update
      security:
        - Bearer: []
      parameters:
        - name: user
          in: body
          description: |
            The email and/or password to update a user with
            Fields are optional, but at least one needs a value
          schema:
            $ref: "#/definitions/AuthUpdate"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete Authenticated User
      # used as the method name of the controller
      operationId: user_delete
      security:
        - Bearer: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/StatusResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/wallet:
    # binds a127 app logic to a route
    x-swagger-router-controller: user
    post:
      description: |
        Assign a Wallet as the active Wallet to Authenticated User.

        If *address* AND *id* are left empty, will generate a new Address and assign to a new Wallet.

        If *id* is empty AND *address* exists, will generate a new Wallet with supplied Address

        If *id* exists, will assign *id* as the active wallet and ignore *address*.

        By default, route will assign new Wallet as the active Wallet.
      # used as the method name of the controller
      operationId: user_assign_wallet
      security:
        - Bearer: []
      parameters:
        - name: wallet
          in: body
          description: |
            The wallet to assign to authenticated user
            *name* - Human reabable label for Wallet
            *public, createdAt, updatedAt* - Not used in this route
          schema:
            $ref: "#/definitions/Wallet"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/wallet/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: user
    put:
      description: Update a Authenticated User's Wallet
      # used as the method name of the controller
      operationId: user_update_wallet
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: ID of Wallet to update
          required: true
          type: integer
        - name: wallet
          in: body
          description: Wallet data to update
          required: true
          schema:
            $ref: "#/definitions/Wallet"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Wallet"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete a Authenticated User's Wallet
      # used as the method name of the controller
      operationId: user_delete_wallet
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: ID of Wallet to delete
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/StatusResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /wallets:
    # binds a127 app logic to a route
    x-swagger-router-controller: wallet
    get:
      description: |
        Get List of Users/Public Wallets.

        By default will return all public wallets, with optional userid parameter to get personal wallets of that userid in addition
      # used as the method name of the controller
      operationId: wallets_get
      parameters:
        - name: userid
          in: query
          description: Optional userid to get personal wallets of user
          type: integer
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Wallet"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /admin/wallet:
    # binds a127 app logic to a route
    x-swagger-router-controller: wallet
    post:
      description: Admin Add a new Public Wallet
      # used as the method name of the controller
      operationId: wallet_add
      security:
        - Bearer: []
      parameters:
        - name: wallet
          in: body
          description: New Wallet to add
          required: true
          schema:
            $ref: "#/definitions/Wallet"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Wallet"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /admin/wallet/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: wallet
    put:
      description: Update a Public Wallet
      # used as the method name of the controller
      operationId: wallet_update
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: ID of Wallet to update
          required: true
          type: integer
        - name: wallet
          in: body
          description: Wallet data to update
          required: true
          schema:
            $ref: "#/definitions/Wallet"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Wallet"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete a Public Wallet
      # used as the method name of the controller
      operationId: wallet_delete
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: ID of Wallet to delete
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/StatusResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Auth:
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
  AuthUpdate:
    description: Either is optional, but at least one or the other
    properties:
      email:
        type: string
      password:
        type: string
  UserAuth:
    required:
      - user
      - token
    properties:
      user:
        $ref: "#/definitions/User"
      token:
        type: string
  User:
    description: wallet = active wallet of user
    required:
      - id
      - email
      - admin
    properties:
      id:
        type: integer
      email:
        type: string
      admin:
        type: boolean
      createdAt:
        type: string
      updatedAt:
        type: string
      wallet:
        type: object
  Wallet:
    required:
      - id
      - address
    properties:
      id:
        type: integer
      name:
        type: string
        description: Human reabable label for Wallet
      address:
        type: string
      public:
        type: boolean
        description: true = available to all users / false = added by user (personal)
      createdAt:
        type: string
      updatedAt:
        type: string
  StatusResponse:
    required:
      - status
    properties:
      status:
        type: boolean
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
